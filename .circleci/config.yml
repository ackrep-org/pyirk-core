jobs: # A basic unit of work in a run
  setup:
    # directory where steps are run
    working_directory: ~/erk/pyerk-core
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: cimg/python:3.8
        # environment: # environment variables for primary container
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps2--{{ checksum "requirements.txt" }}--
      - run:
          name: install graphviz
          command: |
            sudo apt-get update && sudo apt-get install -y graphviz
      - run:
          name: Install Dependancies
          command: |
            pip install -U pip
            pip install -r requirements.txt
            pip install -e .
      - save_cache: # cache Python dependencies using checksum of requirements as the cache-key
          key: deps2--{{ checksum "requirements.txt" }}--
          paths:
            - "venv"
      - run:
          name: Test cli
          command: |
            pyerk --help
      - run:
          name: Load ERK Modules
          command: |
            echo Cloning erk-data
            cd ..
            mkdir erk-data-for-unittests
            cd erk-data-for-unittests
            git clone https://github.com/ackrep-org/ocse.git ocse
            cd ocse
            git checkout ut__pyerk__main
            cd ..
            ls -R
      - run:
          name: Test Core
          command: |
            python -m unittest

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup

