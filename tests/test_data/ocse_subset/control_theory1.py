# Note: this is not the real module for this URI it is an autogenerated subset for testing
import pyerk as p


# noinspection PyUnresolvedReferences
from ipydex import IPS, activate_ips_on_exception  # noqa

ma = p.erkloader.load_mod_from_path("./math1.py", prefix="ma")
ag = ma.ag


__URI__ = "erk:/ocse/0.2/control_theory"

keymanager = p.KeyManager()
p.register_mod(__URI__, keymanager)
p.start_mod(__URI__)


I4239 = ma.I4239["abstract monovariate polynomial"]

I1347 = p.create_item(
    R1__has_label="Lie derivative of scalar field",
    R2__has_description=(
        "mathematical operation wich maps a scalar field h_1 to a new scalar field h_2, depending on a vector field f; "
        "h2 can be interpreted as the time derivative of h_1 along the solution of the ode associated with f; "
        "in other words: along the flow of f"
    ),
    R4__is_instance_of=ma.I4895["mathematical operator"],
    R8__has_domain_of_argument_1=ma.I9923["scalar field"],
    R9__has_domain_of_argument_2=ma.I9841["vector field"],
    R10__has_domain_of_argument_3=ma.I1168["point in state space"],
    R11__has_range_of_result=ma.I9923["scalar field"],
    R13__has_canonical_symbol=r"$L$",
    # TODO: complete defining equation
    ag__R6876__is_named_after=ag.I4853["Sophus Lie"],
)

I2928 = p.create_item(
    R1__has_label="general model representation",
    R2__has_description="general (mathematical) representation of a model of a dynamical system",
    R4__is_instance_of=p.I2["Metaclass"],
)

I6886 = p.create_item(
    R1__has_label="general ode state space representation",
    R2__has_description="explicit ODE system description of a dynamical system",
    R3__is_subclass_of=I2928["general model representation"],
    # TODO: this has to use create_equation (to be implemented)
    R6__has_defining_mathematical_relation=p.create_expression(r"$\dot x = f(x, u)$"),
)

R5405 = ma.R5405["has associated state space"]

I1168 = p.create_item(
    R1__has_label="point in state space",
    R2__has_description="type for a point in a given state space",
    R3__is_subclass_of=p.I12["mathematical object"],
    R41__has_required_instance_relation=R5405["has associated state space"],
)




p.end_mod()
